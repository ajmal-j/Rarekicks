<%- include('../layout/headerHTML')-%>
<link rel="stylesheet" type="text/css" href="../../public/css/homePage.css">
<link rel="stylesheet" type="text/css" href="../../public/css/profile.css">

</head>
<body>
    <%- include('../layout/adminHeader') %>

<main class="container mt-5">
    <section class="content-main">
        <div class="content-header">
            
        </div>
<!-- 
        <form>
            <div class="input-group mb-3">
                <input list="search_terms" type="text" class="form-control" placeholder="Search term" name="search">
                <button class="btn btn-primary" type="submit">Search</button>
            </div>
        </form> -->
<div class="container" style="display: flex; justify-content: center;">
        <div class="card" style="width: max-content; display: flex; justify-content: center;">
            <div class="card-body" style="background-color: #ffffff; border: 1px solid rgb(30, 28, 28); border-radius: 5px;">
                <div style="display: flex; justify-content: end;">
                    <a href="/admin/deleteCoupon?id=<%=id%>" class="btn btn-outline-dark mb-2"  id="button" >Delete</a>
                </div>
               
                <div class="mb-3" style="font-family: 'Michroma', sans-serif;">
                    <h2 class="text-center">Edit Coupon</h2>
                </div>
                <div class="row" style="display: flex; justify-content: center;" >
                    <div class="col-md-4">
                        
                        <form class="row g-3 needs-validation" action="" method="get" novalidate enctype="application/form-data">
                            <div class="col-md-12">
                                <label for="validationCustom01" class="form-label">Code</label>
                                <input type="text" class="form-control" id="validationCustom01" name="code" value="<%=code%>" required>
                                <div class="valid-feedback">
                                    Looks good!
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label for="validationCustom02" class="form-label">DiscountPercentage</label>
                                <input type="number" class="form-control" id="validationCustom02" name="discountPercentage" value="<%=discountPercentage%>" required>
                                <div class="valid-feedback">
                                    Looks good!
                                </div>
                            </div>
                            <div class="col-md-12">
                                <label for="validationCustom02" class="form-label">Discount Expiry Date:</label>
                                <input type="date" class="form-control" id="validationCustom02" name="discountExpiryDate" required value="<%=validUpTo.toISOString().split('T')[0]%>">
                                <div class="valid-feedback">
                                    Looks good!
                                </div>
                            </div>
                            <div class="save">
                                <div class="d-flex" style="justify-content: center;">
                                    <button class="btn btn-dark rounded-pill mt-2" id="startCountdownButton" type="submit">Save</button>
                                </div>
                            </div>
                        </form>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
    </section>
</main>
<script>
    (() => {
        'use strict';
    
        const forms = document.querySelectorAll('.needs-validation');
    
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', async event => {
                event.preventDefault();
    
                const codeInput = form.querySelector('[name="code"]');
                const codeValue = codeInput.value.trim();
                const dateInput = form.querySelector('[name="discountExpiryDate"]');
                const dateValue = dateInput.value;

                const id = "<%=id%>";
    
                const discountInput = form.querySelector('[name="discountPercentage"]');
                const discountValue = discountInput.value.trim();
                const discount = parseInt(discountValue);
    
                if (codeValue === '' || !isNaN(codeValue) || codeValue.length > 15 || codeValue.length < 4) {
                    showAlert('Please enter a valid code.');
                    form.classList.add('was-validated'); // Add 'was-validated' class
                    return;
                }
                if (!isValidFutureDate(dateValue)) {
                    showAlert('Please enter a valid future date.');
                    form.classList.add('was-validated'); // Add 'was-validated' class
                    return;
                }

                function isValidFutureDate(dateString) {
                    // Check if the input is a non-empty string
                    if (!dateString || typeof dateString !== 'string') {
                        return false;
                    }

                    // Attempt to create a Date object from the input
                    const dateObject = new Date(dateString);

                    // Check if the Date object is valid and if it is a future date
                    return !isNaN(dateObject.getTime()) && dateObject > new Date();
                }
    
                if (discountValue === '' || discount >= 80 || discount < 1) {
                    showAlert('Please enter a valid discount value.');
                    form.classList.add('was-validated'); // Add 'was-validated' class
                    return;
                }
    
                if (!form.checkValidity()) {
                    form.classList.add('was-validated'); // Add 'was-validated' class
                    return;
                }
    
                try {
                    const response = await fetch(`/admin/editCoupon?code=${codeValue}&discount=${discountValue}&id=${id}&date=${dateValue}`);
                    const data = await response.json();
                    console.log(data);
                    if (data.added === true) {
                        showSuccess('Updating!');
                        window.location.href = "/admin/couponManagement";
                    } else if (data.added === "exist") {
                        showAlert('Coupon already exists!');
                    } else if (data.added === "not") {
                        showAlert('Not Valid');
                    } else if (data.added === false) {
                        showSuccess('Not Added');
                    }
                } catch (error) {
                    console.error("Error checking category:", error);
                }
            });
    
            // Remove the 'was-validated' class from here
        });
    })();
    </script>
    
<%- include('../layout/footerHTML')-%>
