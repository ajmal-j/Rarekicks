<%- include('../layout/headerHTML')-%>
<link rel="stylesheet" type="text/css" href="../../public/css/homePage.css">
<link rel="stylesheet" type="text/css" href="../../public/css/profile.css">

</head>
<body>
    <%- include('../layout/header') %>

    <div class="container mt-5 mb-5" style="display: flex; justify-content: center;">
        <div class="mainCont" style="max-width: 700px; border: 1px solid black; border-radius: 20px; padding: 20px;">
            <form class="row g-3 needs-validation" action="/user/redirect/" method="get" novalidate enctype="application/form-data">
                <h3 class="mb-4 text-center mb-3" style="font-family: 'Michroma', sans-serif;">Change Password!</h3>
                <div class="col-md-12">
                  <label for="validationPassword" class="form-label">Current Password</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"><i class="bi bi-key"></i></span>
                    <input type="password" class="form-control" id="validationPassword1" aria-describedby="inputGroupPrepend" name="currentPassword"  required>
                    <span class="btn rounded-pill" onclick="togglePassword1()" id="passKey1" style="font-size: 20px;"><i class="bi bi-eye-slash-fill"></i></span>
                    <span class="error-span">&nbsp;</span>
                    <div class="invalid-feedback">
                      Enter A Your Password !
                    </div>
                  </div>
                </div>
                <div class="col-md-12">
                  <label for="validationPassword" class="form-label">New Password</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"><i class="bi bi-key"></i></span>
                    <input type="password" class="form-control" id="validationPassword2" aria-describedby="inputGroupPrepend" name="newPassword"  required>
                    <span class="btn rounded-pill" onclick="togglePassword2()" id="passKey2" style="font-size: 20px;"><i class="bi bi-eye-slash-fill"></i></span>
                    <span class="error-span">&nbsp;</span>
                    <div class="invalid-feedback">
                      Enter A Valid Password !
                    </div>
                  </div>
                </div>
                <div class="col-md-12">
                  <label for="validationPassword" class="form-label">Conform Password</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"><i class="bi bi-key"></i></span>
                    <input type="password" class="form-control" id="validationPassword3" aria-describedby="inputGroupPrepend" name="confirmPassword"  required>
                    <span class="btn rounded-pill" onclick="togglePassword3()" id="passKey3" style="font-size: 20px;"><i class="bi bi-eye-slash-fill"></i></span>
                    <span class="error-span">&nbsp;</span>
                    <div class="invalid-feedback">
                      Enter A Valid Password !
                    </div>
                  </div>
                </div>
                <div class="save">
                    <div class="d-flex" style="justify-content: center;">
                    <button class="btn btn-dark rounded-pill mt-2" id="startCountdownButton" type="submit">Save</button>
                    </div>
                </div>
              </form>
            
        </div>
        <div class="alertKey">
            <% if(locals.message) { %>
              <div class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute; right: 20px; bottom: 30px;"
                data-bs-autohide="true" data-bs-delay="2000" id="success-alert"> 
                <strong><%= message %></strong>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
              
              <script>
                // Add this script to your page
                setTimeout(function() {
                  document.getElementById('success-alert').style.display = 'none';
                }, 2000); // Adjust the delay (in milliseconds) as needed
              </script>
            <% } %>      
          </div>
          <div class="alertKey">
            <% if(locals.messageS) { %>
              <div class="alert alert-success alert-dismissible fade show" role="alert" style="position: absolute; right: 20px; bottom: 30px;"
                data-bs-autohide="true" data-bs-delay="2000" id="success-alert"> 
                <strong><%= messageS %></strong>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
          
              <script>
                // Add this script to your page
                setTimeout(function() {
                  document.getElementById('success-alert').style.display = 'none';
                }, 2000); // Adjust the delay (in milliseconds) as needed
              </script>
            <% } %>      
          </div>
        </div>

        <script>
            (() => {
                'use strict';
            
                const forms = document.querySelectorAll('.needs-validation');
            
                Array.from(forms).forEach(form => {
                    form.addEventListener('submit', async event => {
                        event.preventDefault();
            
                        const currentPasswordInput = form.querySelector('[name="currentPassword"]');
                        const currentPasswordValue = currentPasswordInput.value.trim();
            
                        const newPasswordInput = form.querySelector('[name="newPassword"]');
                        const newPasswordValue = newPasswordInput.value.trim();
            
                        const confirmPasswordInput = form.querySelector('[name="confirmPassword"]');
                        const confirmPasswordValue = confirmPasswordInput.value.trim();
            
                        if (/^\s*$/.test(currentPasswordValue)) {
                            showAlert('Password cannot be just spaces.');
                            form.classList.add('was-validated');
                            return;
                        }
            
                        if (currentPasswordValue.length < 8) {
                            showAlert('Password number must be at least 10 digits.');
                            form.classList.add('was-validated');
                            return;
                        }
            
                        if (/^\s*$/.test(confirmPasswordValue)) {
                            showAlert('Password cannot be just spaces.');
                            form.classList.add('was-validated');
                            return;
                        }
            
                        if (confirmPasswordValue.length < 8) {
                            showAlert('Password must be at least 8 characters.');
                            form.classList.add('was-validated');
                            return;
                        }
                        if (/^\s*$/.test(currentPasswordValue)) {
                            showAlert('Password cannot be just spaces.');
                            form.classList.add('was-validated');
                            return;
                        }
            
                        if (currentPasswordValue.length < 8) {
                            showAlert('Password must be at least 8 characters.');
                            form.classList.add('was-validated');
                            return;
                        }
            
                        if (!form.checkValidity()) {
                            return;
                        }
            
                        try {
                            const response = await fetch('/user/checkPasswordNewPassword?currentPassword=' + currentPasswordValue + "&newPassword=" + newPasswordValue + "&confirmPassword=" + confirmPasswordValue);
                            const data = await response.json();
            
                            if (data.valid === "not") {
                                showAlert('Incorrect Password!');
                                passwordInput.focus();
                            } else if (data.valid === "new") {
                                showAlert('New Password Not Matches!');
                                emailInput.focus();
                            } else {
                                showAlert('Updating');
                                form.submit(); // Manually submit the form
                            }
                        } catch (error) {
                            console.error("Error checking category:", error);
                        }
                    });
            
                }, false);
            })();
            
            function togglePassword1() {
                let passwordField1 = document.getElementById("validationPassword1");
                let toggleSpan1 =document.getElementById("passKey1");
            
                if (passwordField1.type === "password") {
                    passwordField1.type = "text";
                    toggleSpan1.innerHTML = '<i class="bi bi-eye-fill"></i>';
                } else {
                    passwordField1.type = "password";
                    toggleSpan1.innerHTML = '<i class="bi bi-eye-slash-fill"></i>';
                }
                
            }
            function togglePassword2() {
                let passwordField2 = document.getElementById("validationPassword2");
                let toggleSpan2 =document.getElementById("passKey2");
            
             
                if (passwordField2.type === "password") {
                    passwordField2.type = "text";
                    toggleSpan2.innerHTML = '<i class="bi bi-eye-fill"></i>';
                } else {
                    passwordField2.type = "password";
                    toggleSpan2.innerHTML = '<i class="bi bi-eye-slash-fill"></i>';
                }
               
            }
            function togglePassword3() {
                let passwordField3 = document.getElementById("validationPassword3");
                let toggleSpan3 =document.getElementById("passKey3");
            
                if (passwordField3.type === "password") {
                    passwordField3.type = "text";
                    toggleSpan3.innerHTML = '<i class="bi bi-eye-fill"></i>';
                } else {
                    passwordField3.type = "password";
                    toggleSpan3.innerHTML = '<i class="bi bi-eye-slash-fill"></i>';
                }
            }
            </script>
            
<%- include('../layout/footer')-%>
<%- include('../layout/footerHTML')-%>