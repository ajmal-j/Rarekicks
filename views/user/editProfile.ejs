<%- include('../layout/headerHTML')-%>
<link rel="stylesheet" type="text/css" href="../../public/css/homePage.css">
<link rel="stylesheet" type="text/css" href="../../public/css/profile.css">

</head>
<body>
    <%- include('../layout/header') %>

    <div class="container mt-5 mb-5" style="display: flex; justify-content: center;">
        <div class="mainCont" style="max-width: 700px; border: 1px solid black; border-radius: 20px; padding: 20px;">
            <form class="row g-3 needs-validation" action="/user/editProfile/" method="post" novalidate enctype="application/form-data">
                <h3 class="mb-4 text-center mb-3" style="font-family: 'Michroma', sans-serif;">Edit User!</h3>
                <div class="col-md-12">
                  <label for="validationCustom01" class="form-label">Name</label>
                  <input type="text" class="form-control" id="validationCustom01" value="<%=user.name%>" name="name" required>
                  <div class="valid-feedback">
                    Looks good!
                  </div>
                </div>
                <div class="col-md-12">
                  <label for="validationCustom02" class="form-label">Contact</label>
                  <input type="number" class="form-control" id="validationCustom02" name="contact" value="<%=user.contact%>" required>
                  <div class="valid-feedback">
                    Looks good!
                  </div>
                </div>
                <div class="col-md-12">
                  <label for="validationCustomUsername" class="form-label">Email</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend">@</span>
                    <input type="email" class="form-control" id="validationCustomUsername" aria-describedby="inputGroupPrepend" name="email" value="<%=user.email%>" required>
                    <div class="invalid-feedback">
                      Enter A Valid Email !
                    </div>
                  </div>
                </div>
                <div class="col-md-12">
                  <label for="validationPassword" class="form-label">Conform Password</label>
                  <div class="input-group has-validation">
                    <span class="input-group-text" id="inputGroupPrepend"><i class="bi bi-key"></i></span>
                    <input type="password" class="form-control" id="validationPassword" aria-describedby="inputGroupPrepend" name="password"  required>
                    <span class="btn rounded-pill" onclick="togglePassword()" id="passKey" style="font-size: 20px;"><i class="bi bi-eye-slash-fill"></i></span>
                    <span class="error-span">&nbsp;</span>
                    <div class="invalid-feedback">
                      Enter A Valid Password !
                    </div>
                  </div>
                </div>
                <div class="save">
                    <div class="d-flex" style="justify-content: center;">
                    <button class="btn btn-dark rounded-pill mt-2" id="startCountdownButton" type="submit">Save</button>
                    </div>
                </div>
              </form>
            
        </div>
            <div class="alertKey">
                <% if(locals.message){%>
                    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="position: absolute; right: 20px; bottom: 30px;">
                        <strong><%=message%></strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                      </div>
                <%}%>
            </div>
        </div>

        <script>
            (() => {
                'use strict';
            
                const forms = document.querySelectorAll('.needs-validation');
            
                Array.from(forms).forEach(form => {
                    form.addEventListener('submit', async event => {
                        event.preventDefault();
            
                        const contactInput = form.querySelector('[name="contact"]');
                        const contactValue = contactInput.value.trim();
            
                        const nameInput = form.querySelector('[name="name"]');
                        const nameValue = nameInput.value.trim();
            
                        const passwordInput = form.querySelector('[name="password"]');
                        const passwordValue = passwordInput.value.trim();
            
                        const emailInput = form.querySelector('[name="email"]');
                        const emailValue = emailInput.value.trim();
            
                        if (/^\s*$/.test(nameValue)) {
                            showAlert('Name cannot be just spaces.');
                            return;
                        }
            
                        if (contactValue.length < 10) {
                            showAlert('Contact number must be at least 10 digits.');
                            return;
                        }
            
                        if (/^\s*$/.test(passwordValue)) {
                            showAlert('Password cannot be just spaces.');
                            return;
                        }
            
                        if (passwordValue.length < 8) {
                            showAlert('Password must be at least 8 characters.');
                            return;
                        }
            
                        if (!form.checkValidity()) {
                            return;
                        }
            
                        try {
                            const response = await fetch('/user/checkPassword?password=' + passwordValue + "&email=" + emailValue + "&contact=" + contactValue);
                            const data = await response.json();
            
                            if (data.valid === "not") {
                                showAlert('Incorrect Password!');
                                passwordInput.focus();
                            } else if (data.valid === "email") {
                                showAlert('Email Already Exist!');
                                emailInput.focus();
                            } else if (data.valid === "contact") {
                                showAlert('Contact Already Exist!');
                                emailInput.focus();
                            } else if (data.valid === "error") {
                                showAlert('Error');
                                emailInput.focus();
                            } else {
                                showAlert('Updating');
                                form.submit(); // Manually submit the form
                            }
                        } catch (error) {
                            console.error("Error checking category:", error);
                        }
                    });
            
                    form.classList.add('was-validated');
                }, false);
            })();
            function togglePassword() {
                let passwordField = document.getElementById("validationPassword");
                let toggleSpan =document.getElementById("passKey");
            
                if (passwordField.type === "password") {
                    passwordField.type = "text";
                    toggleSpan.innerHTML = '<i class="bi bi-eye-fill"></i>';
                } else {
                    passwordField.type = "password";
                    toggleSpan.innerHTML = '<i class="bi bi-eye-slash-fill"></i>';
                }
            }
            </script>
            
<%- include('../layout/footer')-%>
<%- include('../layout/footerHTML')-%>